From 3aa314e90ae83accddb0ec53586902b9b035e380 Mon Sep 17 00:00:00 2001
From: Verevka <verevka86@gmail.com>
Date: Fri, 8 Jan 2021 00:25:44 +0300
Subject: [PATCH] Revert "UPSTREAM: binder: check for overflow when alloc for
 security context"

This reverts commit 1cc130f95ec70352ac0935f7a52fd0250a5df5f7.
---
 drivers/android/binder.c | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/drivers/android/binder.c b/drivers/android/binder.c
index 679106cc716d..0ee6b585bad5 100644
--- a/drivers/android/binder.c
+++ b/drivers/android/binder.c
@@ -3193,7 +3193,6 @@ static void binder_transaction(struct binder_proc *proc,
 
 	if (target_node && target_node->txn_security_ctx) {
 		u32 secid;
-		size_t added_size;
 
 		security_task_getsecid(proc->tsk, &secid);
 		ret = security_secid_to_secctx(secid, &secctx, &secctx_sz);
@@ -3203,15 +3202,7 @@ static void binder_transaction(struct binder_proc *proc,
 			return_error_line = __LINE__;
 			goto err_get_secctx_failed;
 		}
-		added_size = ALIGN(secctx_sz, sizeof(u64));
-		extra_buffers_size += added_size;
-		if (extra_buffers_size < added_size) {
-			/* integer overflow of extra_buffers_size */
-			return_error = BR_FAILED_REPLY;
-			return_error_param = EINVAL;
-			return_error_line = __LINE__;
-			goto err_bad_extra_size;
-		}
+		extra_buffers_size += ALIGN(secctx_sz, sizeof(u64));
 	}
 
 	trace_binder_transaction(reply, t, target_node);
@@ -3561,7 +3552,6 @@ static void binder_transaction(struct binder_proc *proc,
 	t->buffer->transaction = NULL;
 	binder_alloc_free_buf(&target_proc->alloc, t->buffer);
 err_binder_alloc_buf_failed:
-err_bad_extra_size:
 	if (secctx)
 		security_release_secctx(secctx, secctx_sz);
 err_get_secctx_failed:
-- 
2.39.2

